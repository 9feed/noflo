#!/usr/bin/env node
// vim: set filetype=javascript:
const path = require('path');
const fs = require('fs');
const { ComponentLoader } = require('../lib/NoFlo');

// Base setup
const baseDir = process.cwd();
const cacheFile = path.resolve(baseDir, 'fbp.json');

function preheat() {
  console.log(`Pre-heating NoFlo cache with manifest for ${baseDir}`);
  const loader = new ComponentLoader(baseDir, {
    cache: true,
    discover: true,
  });
  console.time('NPM traversal for NoFlo components');
  return loader.listComponents()
    .then((components) => {
      console.timeEnd('NPM traversal for NoFlo components');
      return components;
    });
}

function handleError(err) {
  console.log(err);
  process.exit(1);
}

function reportAndVerify(components) {
  console.log(`Found ${Object.keys(components).length} components.`);
  fs.stat(cacheFile, (statErr) => {
    if (statErr) {
      console.log(statErr.message);
      process.exit(1);
    }
    return process.exit(0);
  });
}

fs.stat(cacheFile, (err) => {
  if (err) {
    preheat().then(reportAndVerify, handleError);
    return;
  }
  console.log(`Old cache file ${cacheFile} found, clearing`);
  fs.unlink(cacheFile, (unlinkErr) => {
    if (unlinkErr) {
      console.log(unlinkErr);
      process.exit(1);
    }
    preheat().then(reportAndVerify, handleError);
  });
});
